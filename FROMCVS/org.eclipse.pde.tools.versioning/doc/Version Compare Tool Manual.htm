<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<link rel=File-List href="Version%20Compare%20Tool%20Manual_files/filelist.xml">
<link rel=Edit-Time-Data
href="Version%20Compare%20Tool%20Manual_files/editdata.mso">
</head>

<body lang=EN-US style='tab-interval:.5in'>

<p align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt'>Version Compare Tool<o:p></o:p></span></b></p>

<p>The version compare tool is developed to verify Eclipse
feature versions and plug-in versions. The full name of this plug-in tool is “<span
class=SpellE>org.eclipse.pde.tools.versioning</span>”. </p>

<p></p>

<p><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Feature Version, Plug-in Version, and Java Class<o:p></o:p></span></b></p>

<p>Figure 1 shows the hierarchy of feature, plug-in and Java
Class. From the hierarchy, it is easy to understand that updates on Java
classes will cause plug-in update; plug-in, feature updates will cause feature
updates. Therefore, if we want to verify if a feature is correct, we need to
verify versions of its included features and plug-ins; to verify the version of
a plug-in, we need to check updates on the Java classes it contains. </p>

<p></p>

<p>Anyone, who has some experience on Eclipse, must knows there
are a bunch of features and plug-ins under an Eclipse installation. Thus, it is
difficult to manually check whether the new versions of features and plug-ins
have been updated correctly. This tool will help people to verify the new
feature versions and plug-in versions.</p>

<p>
	<IMG SRC="Version Compare Tool Manual_files/image001.jpg">
</p>

<p></p>

<p><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>How to use this tool?<o:p></o:p></span></b></p>

<p>We provide two approaches to use this tool. </p>

<li class=MsoNormal style='mso-list:l1 level1 lfo3;tab-stops:list .5in'>It can
     be executed as an Eclipse plug-in which provides GUI to select input
     information (see: Figure 2).</li>

<p></p>

<p>
	<IMG SRC="Version Compare Tool Manual_files/image002.jpg">
</p>

<p style='margin-left:.25in'><o:p>&nbsp;</o:p></p>

<p style='margin-left:.25in'>In the “Feature Select Option”
area, you need to select if the features you are going to compare are under the
“/features” directory under an Eclipse installation directory, or included in
the Eclipse configuration file <span class=GramE>( usually</span> it is the
“\configuration\<span class=SpellE>org.eclipse.updateplatform.xml</span>” file
under an Eclipse installation directory)</p>

<p style='margin-left:.25in'><o:p>&nbsp;</o:p></p>

<p style='margin-left:.25in'>In the “<span class=SpellE>Plugin</span>
Compare Option” area, you can choose if you want to compare plug-ins as
objects. If you choose this option, all classes denoted by “Bundle-<span
class=SpellE>ClassPath</span>” in a plug-in manifest file will be compared.</p>

<p style='margin-left:.25in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.25in'>In the “Information Option” area,
you can choose what kinds of messages you want to see in the compare result.</p>

<p class=MsoNormal style='margin-left:.25in'><o:p>&nbsp;</o:p></p>

<p style='margin-left:.25in'>In the file selection area, you
can choose:</p>

<p style='margin-left:.25in'><span style='mso-tab-count:1'>      </span>“New”,
directory or <span class=GramE>configuration file</span> which includes new
version of features;</p>

<p><span style='mso-tab-count:1'>            </span>“Old”, directory
or configuration file which includes old version of features;</p>

<p><span style='mso-tab-count:1'>            </span>“Option
File”, a property file which contains inclusion and exclusion information;</p>

<p><span style='mso-tab-count:1'>            </span>“Output
File”, a XML file to which the compare messages will be written;</p>

<p><span style='mso-spacerun:yes'> </span></p>

<p><span style='mso-spacerun:yes'>     </span>In the button
bar, </p>

<p><span style='mso-spacerun:yes'>     </span><span
style='mso-tab-count:1'>       </span>Button “Verify” is pressed to do compare;</p>

<p style='margin-left:.5in'>Button “Filter Result” is pressed
to show interested messages; this function is combined with the selections in
“Information Option” area;</p>

<p style='margin-left:.5in'>Button “Close” is pressed to
terminate the application;</p>

<p></p>

<p></p>

<p></p>

 <li class=MsoNormal style='mso-list:l1 level1 lfo3;tab-stops:list .5in'>It can
     be executed in command line as an Eclipse application.</li>

<p style='margin-left:.5in'>The usage is:</p>

<p style='margin-left:.5in'><span class=GramE>java</span> -cp <span
class=SpellE>startup.jar</span> <span class=SpellE>org.eclipse.core.launcher.Main</span>
-application <span class=SpellE>org.eclipse.pde.tools.versioning.VersionVerifier</span>
-new [path] -old [path] -option [path] -output [path] [-<span class=SpellE>pluginCompare</span>]
[-<span class=SpellE>consoleOutput</span>]</p>

<p></p>

<p style='margin-left:.5in'>-new: path of new configuration
file or features directory</p>

<p style='margin-left:.5in'>-old: path of old configuration
file or features directory</p>

<p style='margin-left:.5in'>-option: path of compare option
file (optional)</p>

<p style='margin-left:.5in'>-output: path of result XML file</p>

<p style='margin-left:.5in'>-<span class=SpellE>pluginCompare</span>:
if need to compare <span class=SpellE>plugins</span> as objects (optional)</p>

<p style='margin-left:.5in'>-<span class=SpellE>consoleOutput</span>:
print results to the system console (optional)</p>

</body>

</html>
