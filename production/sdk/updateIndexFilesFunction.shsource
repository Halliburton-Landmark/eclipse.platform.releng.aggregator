#!/usr/bin/env bash

# this function accomplished "from a client" the same function that
# could be done like this, on the download server (in .../eclipse/downloads directory):
# php createIndex4x.php > index.html
# php eclipse3x.php > eclipse3x.html
# with the important exception that doing from a client, such as using wget, resolves
# such variables as _SERVER, and similar, which are null if ran from command line.


function internalUpdateIndex ()
{

    # this buildeclipse.shsource file is to ease local builds to override some variables. 
    # It should not be used for production builds.
    source buildeclipse.shsource 2>/dev/null
    SITE_HOST=${SITE_HOST:-download.eclipse.org}
    #echo "SITE_HOST: $SITE_HOST"

    if [[ $# != 2 ]]
    then
        echo "PROGRAM ERROR: this function requires two arguments, in order, "
        echo "    the php page to use to create the html page, named in second argument)."
        echo "    Returning 1"
        return 1
    fi

    PHP_PAGE=$1
    HTML_PAGE=$2

    TEMP_INDEX_TXT=tempIndex.txt

    wget --no-verbose -O ${TEMP_INDEX_TXT} http://${SITE_HOST}/eclipse/downloads/${PHP_PAGE} 2>&1
    rccode=$?
    if [[ $rccode = 0 ]]
    then
        rsync ${TEMP_INDEX_TXT} /home/data/httpd/download.eclipse.org/eclipse/downloads/${HTML_PAGE}
        rccode=$?
        if [[ $rccode = 0 ]]
        then
            echo "INFO: Upated http://${SITE_HOST}/eclipse/downloads/${HTML_PAGE}"
            # normal exit. Return out the bottom, to include 'remove' temp file. 
            # return 0
        else
            echo "ERROR: Could not copy ${HTML_PAGE} to downlaods. rccode: $rccode"
            return $rccode
        fi
    else
        echo "ERROR: Could not create or pull ${TEMP_INDEX_TXT} from downloads file ${PHP_PAGE}. rccode: $rccode"
        return $rccode
    fi
    # cleanup
    rm  ${TEMP_INDEX_TXT}
    return 0
}

function updateIndex4 ()
{
    internalUpdateIndex ${x4X_PHP_PAGE_MAIN} ${x4X_HTML_PAGE_MAIN}
}

function updateIndexMAIN ()
{
    internalUpdateIndex ${x4X_PHP_PAGE_MAIN} ${x4X_HTML_PAGE_MAIN}
}


function updateIndex ()
{

    x4X_PHP_PAGE_MAIN="createIndex4x.php"
    x4X_HTML_PAGE_MAIN="index.html"

    # if no arguments, do all
    if [[ $# == 0 ]]
    then
        # if 0 args, assume to do all
        updateIndexMAIN
    elif [[ $# == 1 ]] 
    then
        # if only one argument, check for each specific type and do that group
        # unset any values that might have been set before, from multile calls, from same caller (such as our test case)
        unset MAJOR BUILD_KIND
        ARG=$1
        if [[ $ARG =~ [[:digit:]] ]]
        then
            MAJOR=$ARG
        elif [[ $ARG =~ CBI|MAIN ]]
        then
            BUILD_KIND=$ARG
        else
            echo "ERROR: single argument not recognized as 'CBI' or 'MAIN' or digit. Found ${ARG}."
            echo "       Returning 1"
            return 1
        fi

        # if no 'MAJOR', then assume we found BUILD_KIND
        if [[ -z "${MAJOR}" ]]
        then
            if [[ "$BUILD_KIND" == "CBI" ]]
            then
                updateIndexMAIN
            elif [[ "$BUILD_KIND" == "MAIN" ]]
            then
                updateIndexMAIN
            else
                echo "PROGRAM ERROR: BUILD_KIND not recognized. Found ${BUILD_KIND}."
                echo "       Returning 1"
                return 1
            fi
        elif [[ -z "${BUILD_KIND}" ]]
        then
            if [[ "$MAJOR" == 4 ]]
            then
                updateIndex4
            else 
                echo "PROGRAM ERROR: MAJOR not recognized as '3' or '4'. Found ${MAJOR}."
                echo "       Returning 1"
                return 1
            fi
        else
            echo "PROGRAM ERROR: one argument case. Appears two set?"
            echo "       ARG: $ARG, MAJOR: $MAJOR, BUILD_KIND: $BUILD_KIND"
            echo "       Returning 1"
            return 1
        fi
    elif [[ $# == 2 ]] 
    then
        # two arguments given for specific update
        # accept either order
        ARG1=$1
        ARG2=$2
        if [[ $ARG1 =~ [[:digit:]] && $ARG2 =~ CBI|MAIN  ]]
        then
            MAJOR=$ARG1
            BUILD_KIND=$ARG2
        elif [[ $ARG1 =~ CBI|MAIN && $ARG2 =~ [[:digit:]] ]]
        then
            BUILD_KIND=$ARG1
            MAJOR=$ARG2
        else
            echo "ERROR: two argument case did not recognized either as 'CBI' or 'MAIN' or digit."
            echo "       Found ARG1: ${ARG1}, ARG2: ${ARG2}."
            echo "       Returning 1"
            return 1
        fi

        # note special case, as of now, if two arguments given, "CBI" in 
        # interpreted to mean "MAIN". 
        if [[ "$BUILD_KIND" == "MAIN" && "$MAJOR" == "4" ]]
        then
            internalUpdateIndex ${x4X_PHP_PAGE_MAIN} ${x4X_HTML_PAGE_MAIN}
        else
            echo "ERROR. Combination of parameters did not patch any conditions."
            echo "       Found BUILD_KIND: $BUILD_KIND and MAJOR: $MAJOR"
            echo "       Returning 1"
            return 1
        fi
    fi
return 0
}
