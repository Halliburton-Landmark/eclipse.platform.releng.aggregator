<project
  name="Helper targets"
  default="noDefault">

  <property environment="env" />

  <fail
    unless="EBuilderDir"
    message="EBuilderDir (tychoeclipsebuilder dir) must be passed in to this script" />
  <fail
    unless="postingDirectory"
    message="postingDirectory must be passed to this script." />
  <fail
    unless="buildLabel"
    message="buildLabel must be passed to this script." />
  <property
    name="publishingContent"
    value="${EBuilderDir}/eclipse/publishingFiles" />

  <target
    name="publish"
    description="Preparing to post the build...">
    <echo message="[DEBUG] Eclipse helper.xml publish starting" />
    <fail
      unless="AGGR_DIR"
      message="AGGR_DIR must be defined for this this script" />

    <mkdir dir="${postingDirectory}/${buildLabel}/checksum" />
    <exec
      executable="/bin/bash"
      dir="${postingDirectory}/${buildLabel}">
      <arg line="${EBuilderDir}/eclipse/extras/produceChecksum.sh" />
    </exec>

    <!--post clickThroughs -->
    <copy todir="${postingDirectory}/${buildLabel}">
      <fileset
        dir="${EBuilderDir}/eclipse"
        includes="clickThroughs/" />
    </copy>

    <antcall target="generateEclipseIndex" />

    <!--get static files required in the buildLabel directory -->
    <copy todir="${postingDirectory}/${buildLabel}">
      <fileset dir="${publishingContent}/staticDropFiles" />
    </copy>

    <!--copy javadoc logs -->
    <echo message="DEBUG: BUILD_FAILED: env.BUILD_FAILED: ${env.BUILD_FAILED}" />
    <!--copy javadoc logs: we use failonerror=false and quiet=true since if "build failed"
      this files likely do not exist, and quiet=false (default) results in warnings being
      logged to error log. This can be more distracting, than constructive. And, if the
      files can not be created, for some reason, then that will cause a failure during main part of build.
    -->
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.platform.doc.isv/target/doc.bin.log"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/platform.doc.isv.javadoc.txt"
      failonerror="false"
      quiet="true" />
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.jdt.doc.isv/target/doc.bin.log"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/jdt.doc.isv.javadoc.txt"
      failonerror="false"
      quiet="true" />
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.pde.doc.user/target/doc.bin.log"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/pde.doc.user.javadoc.txt"
      failonerror="false"
      quiet="true" />
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.platform.doc.isv/target/platformconvert.txt"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/platform.doc.isv.schema.txt"
      failonerror="false"
      quiet="true" />
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.jdt.doc.isv/target/jdtconvert.txt"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/jdt.doc.isv.schema.txt"
      failonerror="false"
      quiet="true" />
    <copy
      file="${AGGR_DIR}/eclipse.platform.common/bundles/org.eclipse.pde.doc.user/target/pdeconvert.txt"
      tofile="${postingDirectory}/${buildLabel}/compilelogs/pde.doc.user.schema.txt"
      failonerror="false"
      quiet="true" />
    <echo message="[DEBUG] Eclipse helper.xml publish ending normally" />
  </target>

  <target name="generateEclipseIndex">
    <property
      name="generatorClass"
      value="org.eclipse.releng.generators.TestResultsGenerator" />

    <available
      classname="${generatorClass}"
      property="class"
      value="${generatorClass}" />

    <condition
      property="manifestFile"
      value="${publishingContent}/performanceTestManifest.xml"
      else="${publishingContent}/testManifest.xml">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>

    <!--regenerate the index page with links to test results -->
    <ant
      antfile="${EBuilderDir}/eclipse/buildScripts/publish.xml"
      dir="${publishingContent}"
      target="generateIndex">
      <property
        name="isBuildTested"
        value="true" />
      <property
        name="buildType"
        value="${buildType}" />
      <!--
        oddly enough, expected configs must be specified in alphabetical order.
        That is because the test result files are processed in alphabetical order!
      -->
      <property
        name="testsConfigExpected"
        value="ep46${buildType}-unit-lin64_linux.gtk.x86_64_8.0,ep46${buildType}-unit-mac64_macosx.cocoa.x86_64_8.0,ep46${buildType}-unit-win32_win32.win32.x86_8.0,ep46${buildType}-unit-cen64_linux.gtk.x86_64_8.0" />
      <property
        name="dropTokenList"
        value="%sdk%,%tests%,%example%,%rcpruntime%,%rcpsdk%,%deltapack%,%runtime%,%jdt%,%jdtsdk%,%jdtc%,%pde%,%pdesdk%,%cvs%,%cvssdk%,%swt%,%relengtools%" />
      <property
        name="indexFileName"
        value="index.php" />
      <property
        name="result"
        value="${postingDirectory}/${buildLabel}" />
      <property
        name="dropTemplateFileName"
        value="${publishingContent}/templateFiles/index.template.php" />
      <property
        name="testManifestFileName"
        value="${manifestFile}" />
    </ant>

  </target>

  <target
    name="verifyCompile"
    if="eclipse.running">
    <echo message="DEBUG: in helper.xml: Checking for compile errors..." />
    <!--create html output for compile logs -->
    <eclipse.convert
      input="${postingDirectory}/${buildLabel}/compilelogs"
      validation="true" />
    <!-- Sends email to recipient list in monitor.properties with compile logs attached if errors found -->
    <!-- <verifyCompile install="${postingDirectory}/${buildLabel}/compilelogs" /> -->
  </target>

  <!-- ===================================================================== -->
  <!-- Default target -->
  <!-- ===================================================================== -->
  <target name="noDefault">
    <echo message="You must specify a target when invoking this file" />
  </target>

</project>
